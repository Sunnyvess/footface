@model OKU.Web.Models.PageSetViewer.ViewItemModel
@using OKU.Core.Entities;
@{
    this.Layout = null;
}

<div class="view-item">
  
    @if (this.Model.ViewItem.CodePlan != null)
    {
        int myTabIndex = 1;
        
        <p><b>@this.Model.ViewItem.CodePlan.Heading</b></p>
        <p>@this.Model.ViewItem.CodePlan.BeginTekst</p>
        if (this.Model.ViewItem.CodePlan.CodePlanType == Enums.CodePlanType.TextBox)
        {
            string inputId = string.Format("ViewItem-CodePlan_{0}_{1}", this.Model.ViewItem.Id, this.Model.ViewItem.CodePlan.Id);
            if (this.Model.ViewItem.ShowViewItem)
            {
                if (this.Model.ViewItem.CodePlan.TextBoxType == Enums.TextBoxType.ShortSingleLine)
                {
            <input type="text" id="@inputId" name="@inputId" value="@this.Model.ViewItem.Value" style="width: 50px;" tabindex ="@myTabIndex"/>
                    myTabIndex++;
                }
                else if (this.Model.ViewItem.CodePlan.TextBoxType == Enums.TextBoxType.LongSingleLine)
                {
            <input type="text" id="@inputId" name="@inputId" value="@this.Model.ViewItem.Value" style="width: 200px;" tabindex ="@myTabIndex"/>
                    myTabIndex++;
                }
                else if (this.Model.ViewItem.CodePlan.TextBoxType == Enums.TextBoxType.TextArea)
                {
            <textarea id="@inputId" name="@inputId" style="width: 300px; height: 100px;" tabindex= "@myTabIndex">@this.Model.ViewItem.Value</textarea>
                    myTabIndex++;
                }
            }
            else
            {
                 <input type="text" id="@inputId" name="@inputId" value="@this.Model.ViewItem.Value" style="width: 50px; visibility:hidden"/>
            }
        }
        else if (this.Model.ViewItem.CodePlan.CodePlanType == Enums.CodePlanType.CheckBox)
        {
        <div class="info">
            CodePlanType.CheckBox is not implemented.</div>
        }
        else if (this.Model.ViewItem.CodePlan.CodePlanType == Enums.CodePlanType.RadioButton)
        {       
            if (this.Model.ViewItem.CodePlan.CodePlanEntries.Count() == 0)
            {
                  <div class="info"> Zero code entries for given code plan
                      </div>
            }
            else
            {
                string inputId = string.Format("ViewItem-CodePlan_{0}_{1}", this.Model.ViewItem.Id, this.Model.ViewItem.CodePlan.Id);
                <table style="border-width: 0px">
                @foreach (var codeEntry in this.Model.ViewItem.CodePlan.CodePlanEntries)
                {
                    <tr>
                    @{
                        bool isChecked = false;
                        if (this.Model.ViewItem.Value == codeEntry.Value)
                        {
                            isChecked = true;
                        }
                        <td style="border-width: 0px " valign="top">
                        @{
                            @this.Html.RadioButton(inputId, codeEntry.Value, isChecked, new { @tabindex = myTabIndex });
                            myTabIndex++; 
                        }
                        </td>
                        <td style="border-width: 0px">
                            @this.Html.Label(string.Format("ViewItem-Label_{0}_{1}", this.Model.ViewItem.Id, this.Model.ViewItem.CodePlan.Id), codeEntry.Name)                                                 
                        </td>
                     }
                    </tr>
                         
                }
                </table>
            }
        }
        else if (this.Model.ViewItem.CodePlan.CodePlanType == Enums.CodePlanType.DropDown)
        {
        <div class="info">
            CodePlanType.DropDown is not implemented.</div>
        }
        <p>@this.Html.Raw(Model.ViewItem.CodePlan.EndTekst)</p>
    }
    else if (this.Model.DebugMode)
    {
        <div class="debug">
            ViewItem.CodePlan is null. Not null reference expected.</div>
    }
</div>
